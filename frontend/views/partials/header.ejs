<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Responsive Navbar with Dropdown and Sidebar</title>

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/public/css/nave.css">

    <!-- Custom CSS -->

</head>
<body>
    <!-- Update Task Modal -->
<div id="userModal" class="modal" >
    <div class="modal-content update" style="width: 65vw;">
        <div class="modal-header">
            <h3 id="userModal-h3">view Your Data</h3>
        </div>
        <div class="modal-body">
            <div id="user-modal-view" class="modal-body">
                    <label for="username-view">user name</label>
                    <p id="username-view" >untitled</p>
                    <label for="email-view">email</label>
                    <p id="email-view">untitled</p>

                    <button id="user-update" class="modal-button">Update</button>
                </div>
            <div id="modal-body-update" class="modal-body">
                    <label for="update-username">username</label>
                    <input type="text" id="update-username" name="update-username">

                    <label for="update-email">email</label>
                    <input type="text" id="update-email" name="update-email">



                    <label for="ceck-password">password</label>
                    <input type="text" id="check-password" name="password">

                    <hr>
                    <p> fill it if you just want to update password </p>
                    <hr>
                    <label for="update-password">New Password</label>
                    <input type="text" id="update-password" name="password">

                    <label for="update-password2">Confirm New Password</label>
                    <input type="text" id="update-password2" name="password2">
                    <p ><strong  id="user-update-err" style="color: red;"></strong> </p>
                <button id="saveUpdate-user" class="modal-button">Save</button>

                </div>
            </div>
        <div class="modal-footer">
            <button id="cancelUpdate-user" class="modal-button cancel">Cancel</button>
        </div>
    </div>
    </div>
    <!-- Navbar -->
    <nav class="navbar navbar-expand-lg navbar-dark a7a">
        <div class="container-fluid">
            <a class="navbar-brand" href="/">Tasks App</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ms-auto">
                    <li class="nav-item"><a class="nav-link" href="/home">Home</a></li>
                    <li class="nav-item"><a class="nav-link" href="/login">Login</a></li>
                    <li class="nav-item"><a class="nav-link" href="/logout">Logout</a></li>
                    <li class="nav-item"><a class="nav-link" href="/selection">Selection</a></li>
                    <li class="nav-item"><a class="nav-link" href="/register">Register</a></li>
                    <li class="nav-item"><a class="nav-link" href="/search">Search</a></li>
                    <li class="nav-item"><button class="nav-link" onclick="profile()" id="user-btn">Profile</button></li>

                </ul>
            </div>
            <button class="btn btn-secondary" id="toggle-sidebar">Sidebar</button>
        </div>
    </nav>

    <!-- Sidebar -->
    <div class="sidebar" id="sidebar">
        <ul class="navbar-nav">
            <li class="nav-item"><a class="nav-link" href="/home">Home</a></li>
            <li class="nav-item"><a class="nav-link" href="/login">Login</a></li>
            <li class="nav-item"><a class="nav-link" href="/logout">Logout</a></li>
            <li class="nav-item"><a class="nav-link" href="/selection">Selection</a></li>
            <li class="nav-item"><a class="nav-link" href="/register">Register</a></li>
            <li class="nav-item"><a class="nav-link" href="/search">Search</a></li>
            <li class="nav-item"><button id="user-btn">profile</button></li>
        </ul>
    </div>

    <!-- Overlay -->
    <div class="overlay" id="overlay"></div>

    <!-- Bootstrap Bundle with Popper.js -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>

    <!-- Custom JavaScript -->

    <script>

        const toggleSidebarButton = document.getElementById("toggle-sidebar");
        const sidebar = document.getElementById("sidebar");
        const overlay = document.getElementById("overlay");

        // Toggle sidebar and overlay
        toggleSidebarButton.addEventListener("click", () => {
            sidebar.classList.toggle("active");
            overlay.classList.toggle("active");
        });

        // Close sidebar when clicking on overlay
        overlay.addEventListener("click", () => {
            sidebar.classList.remove("active");
            overlay.classList.remove("active");
        });

        // user Profile
        function getCookie(name) {
            const value = `; ${document.cookie}`;
            const parts = value.split(`; ${name}=`);
            if (parts.length === 2) return parts.pop().split(';').shift();
        }
        function getRequestHeaders() {
            const token = getCookie('token'); // Get token from cookies
            if (!token) {
                //alert('Authorization token is missing!');
                return  [false, 'Authorization token not found in cookies']
            }
            return {
                Authorization: `Bearer ${token}`,
                "Content-Type": "application/json"
            };
        }

        async function profile() {
            try {
                const response = await fetch('/api/auth', {
                    method: 'GET',
                    credentials: 'include', // Include cookies in the request
                });

                if (!response.ok) {
                    throw new Error('Not authorized');
                }
                const result = await response.json();

                const profBtn = document.getElementById("user-btn");
                if (!result[0]) {
                    console.log(result);
                    profBtn.innerHTML = "Not authorized";
                    setTimeout(() => {
                        profBtn.innerHTML = "Profile";
                    }, 3000);
                    return
                }
                let user =  result[1][1]
                //get elements
                    // containers
                const userModal = document.getElementById('userModal');
                const userModal_h3 = document.getElementById("userModal-h3");
                const  userUpdate = document.getElementById('user-update');
                const  userModUpdate = document.getElementById("modal-body-update");
                const  userModView = document.getElementById("user-modal-view");

                    // sub element
                const usernameView  = document.getElementById("username-view")
                const emailView = document.getElementById("email-view")
                const usernameUpdate = document.getElementById("update-username")
                const emailUpdate = document.getElementById("update-email")

                const passwordCheck = document.getElementById("check-password")
                const passwordUpdate = document.getElementById("update-password")
                const passwordUpdate2 = document.getElementById("update-password2")
                const useUpdateErr = document.getElementById("user-update-err")
                usernameUpdate.value = user.username
                emailUpdate.value = user.email
                usernameView.innerHTML = user.username
                emailView.innerHTML = user.email
                function usrUpErr (msg="", time=3000){
                    useUpdateErr.innerHTML = msg
                    setTimeout(() => {
                    useUpdateErr.innerHTML = ""

                    }, time);
                }

                document.getElementById('cancelUpdate-user').addEventListener('click', function() {
                    userModal.style.display = 'none';
                    return
                });
                document.getElementById('user-update').addEventListener('click', function() {
                    userModUpdate.style.display = 'flex';
                    userModView.style.display = 'none';
                    userModal_h3.innerHTML = "Update Your Data"
                });

                document.getElementById('saveUpdate-user').addEventListener('click', function x() {

                   const  username = usernameUpdate.value.trim()
                   const  email = emailUpdate.value.trim()
                    const PWD = passwordCheck.value
                    const PWD1 = passwordUpdate.value
                    const PWD2 = passwordUpdate2.value
                    if ( PWD1  && PWD2 &&( PWD1 !== PWD2)){
                        usrUpErr("password not match ")
                        return
                    }

                    userUpdateObj = {
                        username:username,
                        email:email,
                        password:PWD
                    }
                    usrUpErr(JSON.stringify(userUpdateObj))
                });




                userModal.style.display = 'flex';
                userModView.style.display = 'flex'
                userModUpdate.style.display = 'none';
                userModal_h3.innerHTML = "view Your Data";

            } catch (error) {
                console.error('Error fetching profile:', error);
                const profBtn = document.getElementById("user-btn");
                profBtn.innerHTML = "Not authorized";
                setTimeout(() => {
                    profBtn.innerHTML = "Profile";
                }, 3000);
            }

        }
    </script>
</body>
</html>
